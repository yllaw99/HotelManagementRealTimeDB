<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>